(()=>{"use strict";var n={426:(n,e,r)=>{r.d(e,{Z:()=>l});var t=r(537),o=r.n(t),a=r(645),i=r.n(a)()(o());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Poppins&display=swap);"]),i.push([n.id,"body {\n    margin: 0;\n    color: black;\n    font-size: 16px;\n    font-family: 'Poppins', sans-serif;\n}\n\nh1, h2, button {\n    font-family: 'Bebas Neue', cursive;\n}\narticle h2 {\n    font-size: 2.5rem;\n    margin-block-start: 1rem;\n    margin-block-end: 1rem;\n    color: #ED1C24;\n}\n\nh3, p {\n    font-family: 'Poppins', sans-serif;\n}\n\n.container {\n    max-width: 900px;\n    margin: auto;\n}\n\nheader,\nfooter {\n    background-color: #ED1C24;\n    padding: 1rem;\n    color: #FFFFFF;\n}\n\narticle {\n    padding: 1rem;\n}\n\nheader .container,\nfooter .container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n\n}\n\n.menu-item {\n    margin-top: 2px;\n    background-color: transparent;\n    padding: 0;\n    border: 0;\n    border-top: 2px solid transparent;\n    border-bottom: 2px solid transparent;\n    margin-right: 0.5rem;\n    color: #FFFFFF;\n    font-size: 1.5rem;\n    cursor: pointer;\n}\n\n.menu-item:hover {\n    border-color: #FFFFFF;\n}\n\n.menu-item.active {\n    border-color: #FFFFFF;\n}\n\n.image-text {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n}\n.img-wrapper {\n    margin: 1rem 0;\n}\n@media screen and (min-width: 600px) {\n    .image-text .shrink {\n        flex: 1;\n    }\n    .img-wrapper {\n        margin-left: 1rem;\n    }\n}\n\n.img-wrapper img {\n    width: 100%;\n    height: auto;\n\n}\n\n.cards {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n.card {\n    box-sizing: border-box;\n    width: 100%;\n    margin: 0.5rem 0.5rem 0.5rem 0;\n    flex-grow: 1;\n    border-top: 4px solid #ED1C24;\n}\n\n@media screen and (min-width: 600px) {\n    .card {\n        max-width: 48%;\n    }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,SAAS;IACT,YAAY;IACZ,eAAe;IACf,kCAAkC;AACtC;;AAEA;IACI,kCAAkC;AACtC;AACA;IACI,iBAAiB;IACjB,wBAAwB;IACxB,sBAAsB;IACtB,cAAc;AAClB;;AAEA;IACI,kCAAkC;AACtC;;AAEA;IACI,gBAAgB;IAChB,YAAY;AAChB;;AAEA;;IAEI,yBAAyB;IACzB,aAAa;IACb,cAAc;AAClB;;AAEA;IACI,aAAa;AACjB;;AAEA;;IAEI,aAAa;IACb,mBAAmB;IACnB,8BAA8B;IAC9B,mBAAmB;;AAEvB;;AAEA;IACI,eAAe;IACf,6BAA6B;IAC7B,UAAU;IACV,SAAS;IACT,iCAAiC;IACjC,oCAAoC;IACpC,oBAAoB;IACpB,cAAc;IACd,iBAAiB;IACjB,eAAe;AACnB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;AACzB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,eAAe;AACnB;AACA;IACI,cAAc;AAClB;AACA;IACI;QACI,OAAO;IACX;IACA;QACI,iBAAiB;IACrB;AACJ;;AAEA;IACI,WAAW;IACX,YAAY;;AAEhB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,eAAe;IACf,8BAA8B;AAClC;AACA;IACI,sBAAsB;IACtB,WAAW;IACX,8BAA8B;IAC9B,YAAY;IACZ,6BAA6B;AACjC;;AAEA;IACI;QACI,cAAc;IAClB;AACJ",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Bebas+Neue&family=Poppins&display=swap');\n\nbody {\n    margin: 0;\n    color: black;\n    font-size: 16px;\n    font-family: 'Poppins', sans-serif;\n}\n\nh1, h2, button {\n    font-family: 'Bebas Neue', cursive;\n}\narticle h2 {\n    font-size: 2.5rem;\n    margin-block-start: 1rem;\n    margin-block-end: 1rem;\n    color: #ED1C24;\n}\n\nh3, p {\n    font-family: 'Poppins', sans-serif;\n}\n\n.container {\n    max-width: 900px;\n    margin: auto;\n}\n\nheader,\nfooter {\n    background-color: #ED1C24;\n    padding: 1rem;\n    color: #FFFFFF;\n}\n\narticle {\n    padding: 1rem;\n}\n\nheader .container,\nfooter .container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n\n}\n\n.menu-item {\n    margin-top: 2px;\n    background-color: transparent;\n    padding: 0;\n    border: 0;\n    border-top: 2px solid transparent;\n    border-bottom: 2px solid transparent;\n    margin-right: 0.5rem;\n    color: #FFFFFF;\n    font-size: 1.5rem;\n    cursor: pointer;\n}\n\n.menu-item:hover {\n    border-color: #FFFFFF;\n}\n\n.menu-item.active {\n    border-color: #FFFFFF;\n}\n\n.image-text {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n}\n.img-wrapper {\n    margin: 1rem 0;\n}\n@media screen and (min-width: 600px) {\n    .image-text .shrink {\n        flex: 1;\n    }\n    .img-wrapper {\n        margin-left: 1rem;\n    }\n}\n\n.img-wrapper img {\n    width: 100%;\n    height: auto;\n\n}\n\n.cards {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n.card {\n    box-sizing: border-box;\n    width: 100%;\n    margin: 0.5rem 0.5rem 0.5rem 0;\n    flex-grow: 1;\n    border-top: 4px solid #ED1C24;\n}\n\n@media screen and (min-width: 600px) {\n    .card {\n        max-width: 48%;\n    }\n}"],sourceRoot:""}]);const l=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var l=0;l<this.length;l++){var s=this[l][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var u=[].concat(n[c]);t&&i[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),r&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=r):u[2]=r),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),e.push(u))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),a="/*# ".concat(o," */"),i=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var a={},i=[],l=0;l<n.length;l++){var s=n[l],c=t.base?s[0]+t.base:s[0],u=a[c]||0,A="".concat(c," ").concat(u);a[c]=u+1;var d=r(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var m=o(p,t);t.byIndex=l,e.splice(l,0,{identifier:A,updater:m,references:1})}i.push(A)}return i}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var a=t(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var l=r(a[i]);e[l].references--}for(var s=t(n,o),c=0;c<a.length;c++){var u=r(a[c]);0===e[u].references&&(e[u].updater(),e.splice(u,1))}a=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var a=r.sourceMap;a&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var a=e[t]={id:t,exports:{}};return n[t](a,a.exports,r),a.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{function n(n,e,r,t){let o=document.createElement(n);return e&&(o.id=e),r&&Array.isArray(r)&&o.classList.add(...r),t&&(o.innerText=t),o}function e(n){n.reverse();for(let e=0;e<n.length-1;e++)e+1!==n.length&&Array.isArray(n[e])?t(n[e+1],n[e]):n[e+1].appendChild(n[e])}function t(n,e){e.forEach((e=>{console.log(e),n.appendChild(e)}))}function o(){const r=n("article","bodyAbout",["container"],null),o=n("h2",null,["image-text__title"],"Our story"),a=n("p",null,["shrink"],"Brothers Omar (who's childhood nickname was \"Slim\") and Yunes grew up with a respect for hard work, and an appreciation for the value of fresh ingredients having both spent many hours working in their father's grocery as teenagers. They carried their strong work ethic and the appreciation of fresh food with them and, in 2011, opened pizza place in New Hope, MN. It wasn't long, however, before they decided to expand both menu and venue. In February of 2013, the brothers moved back to their roots and opened Slim's on busy and bustling Brooklyn Boulevard in Brooklyn Center, where it's still about the basics: hard work and fresh food."),i=n("div",null,["shrink"],null);t(i,[a]);const l=n("div",null,["img-wrapper","shrink"],null),s=new Image;s.src="./images/about-burgers.jpg",e([l,s]);const c=n("div",null,["image-text"],null);return t(c,[i,l]),t(r,[o,c]),r}var a=r(379),i=r.n(a),l=r(795),s=r.n(l),c=r(569),u=r.n(c),A=r(565),d=r.n(A),p=r(216),m=r.n(p),f=r(589),h=r.n(f),g=r(426),C={};C.styleTagTransform=h(),C.setAttributes=d(),C.insert=u().bind(null,"head"),C.domAPI=s(),C.insertStyleElement=m(),i()(g.Z,C),g.Z&&g.Z.locals&&g.Z.locals;const b=document.getElementById("content");let v=[function(){const r=n("header",null,null,null),o=n("div",null,["container"],null),a=n("h1",null,["title","large"],"Slim's Burgers"),i=n("menu");let l=[],s=!0;return["About","Menu","Contact"].forEach((e=>{let r=n("button",`btn${e}`,s?["menu-item","active"]:["menu-item"],e);l.push(r),s=!1})),t(i,l),e([r,o,[a,i]]),r}(),o(),function(){const r=n("footer",null,null,null),o=n("div",null,["container"],null),a=n("h2",null,["title","large"],"Slim's Burgers");let i=new Date;i=i.getFullYear();const l=n("div",null,["footer-info"],null);return t(l,[n("p",null,null,`© ${i} Brychan Morris-Dafydd`)]),e([r,o,[a,l]]),r}()];t(b,v);const I=document.querySelectorAll(".menu-item");I.forEach((r=>{r.addEventListener("click",(r=>{I.forEach((n=>{n.classList.remove("active")})),r.target.classList.add("active");let a,i=document.querySelector("article");"btnMenu"===r.target.id?(a=function(){const r=n("article",null,["container"],null),o=n("h2",null,["image-text__title"],"Our menu"),a=n("p",null,["shrink"],"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.");let i=[];const l=n("div",null,["cards"],null);return[{title:"Beef Burger",description:"Honest beef, red onion relish and lettuce.",price:"£10.00",calories:"656kcals"},{title:"Plant Burger",description:"Beyond Meat burger, vegan smoked Gouda, Rubies Chipotle ‘Mayo’, mustard, red onion, pickles, lettuce.",price:"£13.00",calories:"726kcals"},{title:"Cluckin' Burger",description:"Free-range chicken breast, basil pesto, mustard mayo, tomato and rocket.",price:"£12.50",calories:"630kcals"},{title:"Honest Burger",description:"Honest beef, red onion relish, smoked bacon, cheddar, lettuce and pickles.",price:"£13.75",calories:"733kcals"}].forEach((e=>{let r=n("div",null,["card"],null);t(r,[n("h3",null,["card__title"],e.title),n("div",null,["card__description"],e.description),n("div",null,["card__price"],e.price),n("div",null,["card__cals"],e.calories)]),i.push(r)})),t(l,i),e([r,[o,a,l]]),r}(),b.replaceChild(a,i)):"btnContact"===r.target.id?(a=function(){const r=n("article",null,["container"],null),o=n("h2",null,["image-text__title"],"Contact us");let a=[];[{label:"Phone: ",value:"+44 7781 678 304"},{label:"Instagram: ",value:"@slims_burger"},{label:"Address: ",value:"1446 Westgate St, CF5 2PQ"}].forEach((e=>{let r=n("span",null,["contact__label"],e.label),t=n("p",null,null,e.value);t.prepend(r),a.push(t)}));const i=n("div",null,["shrink"],null);t(i,a);const l=n("div",null,["img-wrapper","shrink"],null),s=new Image;s.src="./images/maps.png",e([l,s]);const c=n("div",null,["image-text"],null);return t(c,[i,l]),t(r,[o,c]),r}(),b.replaceChild(a,i)):"btnAbout"===r.target.id?(a=o(),b.replaceChild(a,i)):console.log("Oops something went wrong...")}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,